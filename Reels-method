--[[
    WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
local redzlib = loadstring(game:HttpGet("https://gist.githubusercontent.com/MjContiga1/54c07e52fc2aab8873b68d91a71d11c6/raw/fb4f1d6a7c89465f3b39bc00eeff09af24b88f20/Redz%2520hub.lua"))()

-- Create window
local Window = redzlib:MakeWindow({
    Title = "Fishing Automation",
    SubTitle = "Auto Reel & Cast",
    SaveFolder = "FishingSettings"
})

-- Add minimize button
Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://137819129207311", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(35, 1) },
})

-- Create single tab
local MainTab = Window:MakeTab({"Main", "rbxassetid://7733960981"}) -- Icon for Main tab
Window:SelectTab(MainTab)

-- Add section
local Section = MainTab:AddSection({"Fishing Automation"})

-- Initialize variables
local Settings = Settings or {}
local autoreel = autoreel or false
local autocast = autocast or false
local CatchMethod = CatchMethod or "Perfect"
local reelMethod = reelMethod or "Legit"
local savedPosition = savedPosition or nil
local autoreel_running = autoreel_running or false

-- Mock functions (replace with actual implementations)
local function SaveSettings()
    warn("SaveSettings called (implement actual saving logic)")
    -- Example: Save Settings to a file or storage
end

local function StartAutoReel()
    autoreel_running = true
    warn("StartAutoReel called")
    -- Add actual Auto Reel logic here
end

local function StopAutoReel()
    autoreel_running = false
    warn("StopAutoReel called")
    -- Add actual stop logic here
end

local function StartAutoCastThrow()
    warn("StartAutoCastThrow called")
    -- Add actual Auto Cast Throw logic here
end

local function StartAutoCastTeleport()
    warn("StartAutoCastTeleport called")
    -- Add actual Auto Cast Teleport logic here
end

local function GetHumanoidRootPart()
    local player = game.Players.LocalPlayer
    local character = player.Character
    return character and character:FindFirstChild("HumanoidRootPart")
end

-- Auto Reel Toggle
MainTab:AddToggle({
    Name = "Auto Reel",
    Flag = "AutoReel",
    Default = autoreel,
    Callback = function(state)
        autoreel = state
        Settings.AutoReel = state
        SaveSettings()
        if state then
            local success, err = pcall(StartAutoReel)
            if not success then
                warn("Error in StartAutoReel: " .. err)
                Window:Dialog({
                    Title = "Error",
                    Text = "Failed to start Auto Reel: " .. err,
                    Options = {{"OK", function() end}}
                })
            end
        else
            local success, err = pcall(StopAutoReel)
            if not success then
                warn("Error in StopAutoReel: " .. err)
            end
        end
    end
})

-- Auto Cast Toggle
MainTab:AddToggle({
    Name = "Auto Cast",
    Flag = "AutoCast",
    Default = autocast,
    Callback = function(state)
        autocast = state
        Settings.AutoCast = state
        SaveSettings()
        if state then
            local success, err = pcall(function()
                StartAutoCastThrow()
                StartAutoCastTeleport()
            end)
            if not success then
                warn("Error in AutoCast: " .. err)
                Window:Dialog({
                    Title = "Error",
                    Text = "Failed to start Auto Cast: " .. err,
                    Options = {{"OK", function() end}}
                })
            end
        end
    end
})

-- Catch Method Dropdown
MainTab:AddDropdown({
    Name = "Catch Method",
    Options = {"Perfect", "Random"},
    Default = CatchMethod,
    Callback = function(choice)
        CatchMethod = choice
        Settings.CatchMethod = choice
        SaveSettings()
    end
})

-- Reel Method Dropdown
MainTab:AddDropdown({
    Name = "Reel Method",
    Options = {"Legit", "Instant"},
    Default = reelMethod,
    Callback = function(choice)
        reelMethod = choice
        Settings.ReelMethod = choice
        SaveSettings()
        if autoreel then
            autoreel_running = false
            local success, err = pcall(StartAutoReel)
            if not success then
                warn("Error restarting AutoReel: " .. err)
                Window:Dialog({
                    Title = "Error",
                    Text = "Failed to restart Auto Reel: " .. err,
                    Options = {{"OK", function() end}}
                })
            end
        end
        if reelMethod == "Instant" then
            local isPerfect = (CatchMethod == "Perfect") or (CatchMethod == "Random" and math.random(0,1) == 1)
            local success, err = pcall(function()
                game:GetService("ReplicatedStorage"):WaitForChild("events"):WaitForChild("reelfinished"):FireServer(100, isPerfect)
            end)
            if not success then
                warn("Error firing reelfinished: " .. err)
                Window:Dialog({
                    Title = "Error",
                    Text = "Failed to fire reelfinished event: " .. err,
                    Options = {{"OK", function() end}}
                })
            end
        end
    end
})

-- Save Position Button
MainTab:AddButton({
    Name = "Save Position",
    Callback = function()
        local hrp = GetHumanoidRootPart()
        if hrp then
            savedPosition = hrp.CFrame
            local pos = savedPosition.Position
            local _, yRot, _ = savedPosition:ToEulerAnglesXYZ()
            Settings.SavedPosition = {
                X = pos.X,
                Y = pos.Y,
                Z = pos.Z,
                Yaw = math.deg(yRot)
            }
            SaveSettings()
            Window:Dialog({
                Title = "Success",
                Text = "Position saved successfully!",
                Options = {{"OK", function() end}}
            })
        else
            warn("Cannot save position: HumanoidRootPart not found")
            Window:Dialog({
                Title = "Error",
                Text = "Cannot save position: HumanoidRootPart not found",
                Options = {{"OK", function() end}}
            })
        end
    end
})
