local success, redzlib = pcall(function()
    return loadstring(game:HttpGet("https://gist.githubusercontent.com/MjContiga1/54c07e52fc2aab8873b68d91a71d11c6/raw/fb4f1d6a7c89465f3b39bc00eeff09af24b88f20/Redz%2520hub.lua"))()
end)
if not success then
    warn("Failed to load redzlib: " .. tostring(redzlib))
    return
end

-- Create window
local Window = redzlib:MakeWindow({
    Title = "Fisch Auto Reel",
    SubTitle = "Make For Lazy Fisher",
    SaveFolder = "FischSettings"
})

-- Check if the new image asset loads
local newImageId = "rbxassetid://135322148494327"
local fallbackImageId = "rbxassetid://139438145143663"
local imageId = newImageId
local success, err = pcall(function()
    game:GetService("ContentProvider"):PreloadAsync({newImageId})
end)
if not success then
    warn("Failed to load image " .. newImageId .. ": " .. tostring(err))
    imageId = fallbackImageId
end

-- Add minimize button (square with rounded corners)
Window:AddMinimizeButton({
    Button = { 
        Image = imageId, 
        BackgroundTransparency = 0,
        Size = UDim2.new(0, 44, 0, 44)
    },
    Corner = { CornerRadius = UDim.new(0, 8) }
})

-- Create tabs
local MainTab = Window:MakeTab({"Main", "rbxassetid://7733960981"})
local InstantTab = Window:MakeTab({"Instant Tab", "rbxassetid://7733960981"})
Window:SelectTab(MainTab)

-- Add section for Main Tab
local MainSection = MainTab:AddSection({"Fisch Auto Reel"})
local InstantSection = InstantTab:AddSection({"Instant Reel"})

-- Initialize services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local GuiService = game:GetService("GuiService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Variables
local autoreel = false
local normalmode = false
local smoothness = "Medium"
local autocast = false
local autoCastMode = "Normal" -- New variable for Auto Cast mode
local autoreel_running = false
local normalmode_running = false
local autocast_running = false
local autoShakeEnabled = false
local ShakeMode = "Navigation"
local autoShakeConnection
local instantreel = false
local instantReelMode = "Normal"
local instantreel_running = false

-- Get HumanoidRootPart
local function GetHumanoidRootPart()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return char:WaitForChild("HumanoidRootPart")
end

-- Linear interpolation for smooth movement
local function lerp(a, b, t)
    return a + (b - a) * t
end

-- Get smoothness value for Auto Reel (Legit)
local function getSmoothnessValue()
    if smoothness == "Slow" then
        return 0.15
    elseif smoothness == "Fast" then
        return 0.25
    else -- Medium
        return 0.2
    end
end

-- Get smoothness value for Auto Reel (Normal)
local function getSmoothnessValueNormal()
    if smoothness == "Slow" then
        return 0.25
    elseif smoothness == "Fast" then
        return 0.9
    else -- Medium
        return 0.6
    end
end

-- Auto Reel (Legit mode, continuous tracking)
local function StartAutoReel()
    if autoreel_running or normalmode_running or instantreel_running then return end
    autoreel_running = true
    task.defer(function()
        while autoreel do
            local gui = LocalPlayer:FindFirstChild("PlayerGui")
            local reel = gui and gui:FindFirstChild("reel")
            while autoreel and gui and not reel do
                reel = gui:FindFirstChild("reel")
                task.wait(0.1)
            end
            if reel then
                local char = LocalPlayer.Character
                if char then
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") then
                            while autoreel and reel and reel.Parent and tool.Parent == char do
                                local success, err = pcall(function()
                                    local bar = reel:FindFirstChild("bar")
                                    local fish = bar and bar:FindFirstChild("fish")
                                    local playerbar = bar and bar:FindFirstChild("playerbar")
                                    if fish and playerbar then
                                        local currentX = playerbar.Position.X.Scale
                                        local currentY = playerbar.Position.Y.Scale
                                        local lerpT = getSmoothnessValue()
                                        while autoreel and reel and reel.Parent and fish and playerbar and tool.Parent == char do
                                            local targetX = fish.Position.X.Scale + math.random(-0.005, 0.005)
                                            local targetY = fish.Position.Y.Scale + math.random(-0.005, 0.005)
                                            currentX = lerp(currentX, targetX, lerpT)
                                            currentY = lerp(currentY, targetY, lerpT)
                                            playerbar.Position = UDim2.new(currentX, 0, currentY, 0)
                                            task.wait(0.01)
                                            bar = reel:FindFirstChild("bar")
                                            fish = bar and bar:FindFirstChild("fish")
                                            playerbar = bar and bar:FindFirstChild("playerbar")
                                        end
                                    else
                                        warn("Reel UI elements not found")
                                    end
                                end)
                                if not success then
                                    warn("Error in AutoReel: " .. err)
                                    autoreel = false
                                    return
                                end
                                task.wait(0.1)
                            end
                        end
                    end
                end
            else
                warn("Reel UI not found")
            end
            task.wait(0.1)
        end
        autoreel_running = false
    end)
end

-- Auto Reel Normal (continuous tracking)
local function StartAutoReelNormal()
    if normalmode_running or autoreel_running or instantreel_running then return end
    normalmode_running = true
    task.defer(function()
        while normalmode do
            local gui = LocalPlayer:FindFirstChild("PlayerGui")
            local reel = gui and gui:FindFirstChild("reel")
            while normalmode and gui and not reel do
                reel = gui:FindFirstChild("reel")
                task.wait(0.1)
            end
            if reel then
                local char = LocalPlayer.Character
                if char then
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") then
                            while normalmode and reel and reel.Parent and tool.Parent == char do
                                local success, err = pcall(function()
                                    local bar = reel:FindFirstChild("bar")
                                    local fish = bar and bar:FindFirstChild("fish")
                                    local playerbar = bar and bar:FindFirstChild("playerbar")
                                    if fish and playerbar then
                                        local currentX = playerbar.Position.X.Scale
                                        local currentY = playerbar.Position.Y.Scale
                                        local lerpT = getSmoothnessValueNormal()
                                        while normalmode and reel and reel.Parent and fish and playerbar and tool.Parent == char do
                                            local targetX = fish.Position.X.Scale + math.random(-0.01, 0.01)
                                            local targetY = fish.Position.Y.Scale + math.random(-0.01, 0.01)
                                            currentX = lerp(currentX, targetX, lerpT)
                                            currentY = lerp(currentY, targetY, lerpT)
                                            playerbar.Position = UDim2.new(currentX, 0, currentY, 0)
                                            task.wait(0.01)
                                            bar = reel:FindFirstChild("bar")
                                            fish = bar and bar:FindFirstChild("fish")
                                            playerbar = bar and bar:FindFirstChild("playerbar")
                                        end
                                    else
                                        warn("Reel UI elements not found")
                                    end
                                end)
                                if not success then
                                    warn("Error in AutoReelNormal: " .. err)
                                    normalmode = false
                                    return
                                end
                                task.wait(0.1)
                            end
                        end
                    end
                end
            else
                warn("Reel UI not found")
            end
            task.wait(0.1)
        end
        normalmode_running = false
    end)
end

-- Auto Cast
local function StartAutoCast()
    if autocast_running then return end
    autocast_running = true
    task.defer(function()
        while autocast do
            local success, err = pcall(function()
                local char = LocalPlayer.Character
                if char then
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") and tool:FindFirstChild("events") and tool.events:FindFirstChild("castAsync") then
                            local gui = LocalPlayer:FindFirstChild("PlayerGui")
                            local reel = gui and gui:FindFirstChild("reel")
                            local bar = reel and reel:FindFirstChild("bar")
                            local fish = bar and bar:FindFirstChild("fish")
                            if not reel or not bar or not fish then
                                task.wait(1) -- Wait 1 second after fish bar disappears
                                local args = {
                                    [1] = autoCastMode == "Max" and 100 or math.random(10, 100),
                                    [2] = 1
                                }
                                tool.events.castAsync:InvokeServer(unpack(args))
                            end
                        else
                            warn("No valid rod with castAsync event found")
                        end
                    end
                else
                    warn("Character not found")
                end
            end)
            if not success then
                warn("Error in AutoCast: " .. err)
                autocast = false
                autocast_running = false
                return
            end
            task.wait(0.1)
        end
        autocast_running = false
    end)
end

-- Auto Shake
local function autoShake()
    if ShakeMode == "Navigation" then
        task.wait()
        xpcall(function()
            local shakeui = PlayerGui:FindFirstChild("shakeui")
            if not shakeui then return end
            local safezone = shakeui:FindFirstChild("safezone")
            local button = safezone and safezone:FindFirstChild("button")
            task.wait(0.2)
            GuiService.SelectedObject = button
            if GuiService.SelectedObject == button then
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Return, false, game)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Return, false, game)
            end
            task.wait(0.1)
            GuiService.SelectedObject = nil
        end, function(err)
            warn("Error in AutoShake (Navigation): " .. err)
        end)
    elseif ShakeMode == "Mouse" then
        task.wait()
        xpcall(function()
            local shakeui = PlayerGui:FindFirstChild("shakeui")
            if not shakeui then return end
            local safezone = shakeui:FindFirstChild("safezone")
            local button = safezone and safezone:FindFirstChild("button")
            local pos = button.AbsolutePosition
            local size = button.AbsoluteSize
            VirtualInputManager:SendMouseButtonEvent(pos.X + size.X / 2, pos.Y + size.Y / 2, 0, true, LocalPlayer, 0)
            VirtualInputManager:SendMouseButtonEvent(pos.X + size.X / 2, pos.Y + size.Y / 2, 0, false, LocalPlayer, 0)
        end, function(err)
            warn("Error in AutoShake (Mouse): " .. err)
        end)
    end
end

local function startAutoShake()
    if autoShakeConnection or not autoShakeEnabled then return end
    autoShakeConnection = RunService.RenderStepped:Connect(autoShake)
end

local function stopAutoShake()
    if autoShakeConnection then
        autoShakeConnection:Disconnect()
        autoShakeConnection = nil
    end
end

-- Auto Shake Triggers
PlayerGui.DescendantAdded:Connect(function(descendant)
    if autoShakeEnabled and descendant.Name == "button" and descendant.Parent and descendant.Parent.Name == "safezone" then
        startAutoShake()
    end
end)

PlayerGui.DescendantAdded:Connect(function(descendant)
    if descendant.Name == "playerbar" and descendant.Parent and descendant.Parent.Name == "bar" then
        stopAutoShake()
    end
end)

if autoShakeEnabled and PlayerGui:FindFirstChild("shakeui") and PlayerGui.shakeui:FindFirstChild("safezone") and PlayerGui.shakeui.safezone:FindFirstChild("button") then
    startAutoShake()
end

-- Instant Reel (for Instant Tab)
local function StartInstantReel()
    if instantreel_running or autoreel_running or normalmode_running then return end
    instantreel_running = true
    task.defer(function()
        while instantreel do
            local gui = LocalPlayer:FindFirstChild("PlayerGui")
            local reel = gui and gui:FindFirstChild("reel")
            while instantreel and gui and not reel do
                reel = gui:FindFirstChild("reel")
                task.wait(0.1)
            end
            if reel then
                local char = LocalPlayer.Character
                if char then
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") then
                            while instantreel and reel and reel.Parent and tool.Parent == char do
                                local success, err = pcall(function()
                                    local bar = reel:FindFirstChild("bar")
                                    local fish = bar and bar:FindFirstChild("fish")
                                    local playerbar = bar and bar:FindFirstChild("playerbar")
                                    if fish and playerbar then
                                        -- Trigger Instant Reel after 4.5 seconds
                                        task.spawn(function()
                                            task.wait(4.5)
                                            if instantreel and reel and reel.Parent and fish and playerbar and tool.Parent == char then
                                                local args = {
                                                    [1] = 100,
                                                    [2] = instantReelMode == "Perfect" and true or false
                                                }
                                                print("Firing reelfinished with args:", args[1], args[2])
                                                ReplicatedStorage.events.reelfinished:FireServer(unpack(args))
                                            end
                                        end)
                                        local currentX = playerbar.Position.X.Scale
                                        local currentY = playerbar.Position.Y.Scale
                                        local lerpT = 0.4 -- Fixed smoothness for Instant Reel
                                        while instantreel and reel and reel.Parent and fish and playerbar and tool.Parent == char do
                                            local targetX = fish.Position.X.Scale + math.random(-0.005, 0.005)
                                            local targetY = fish.Position.Y.Scale + math.random(-0.005, 0.005)
                                            currentX = lerp(currentX, targetX, lerpT)
                                            currentY = lerp(currentY, targetY, lerpT)
                                            playerbar.Position = UDim2.new(currentX, 0, currentY, 0)
                                            task.wait(0.01)
                                            bar = reel:FindFirstChild("bar")
                                            fish = bar and bar:FindFirstChild("fish")
                                            playerbar = bar and bar:FindFirstChild("playerbar")
                                        end
                                    else
                                        warn("Reel UI elements not found")
                                    end
                                end)
                                if not success then
                                    warn("Error in StartInstantReel: " .. err)
                                    instantreel = false
                                    return
                                end
                                task.wait(0.1)
                            end
                        end
                    end
                end
            else
                warn("Reel UI not found")
            end
            task.wait(0.1)
        end
        instantreel_running = false
    end)
end

-- Auto Reel Toggle (Legit mode)
MainTab:AddToggle({
    Name = "Auto Reel (Legit)",
    Flag = "AutoReel",
    Default = autoreel,
    Callback = function(state)
        autoreel = state
        if state and (normalmode or instantreel) then
            normalmode = false
            instantreel = false
            normalmode_running = false
            instantreel_running = false
        end
        if state then
            local success, err = pcall(StartAutoReel)
            if not success then
                warn("Error in StartAutoReel: " .. err)
                autoreel = false
            end
        else
            autoreel_running = false
        end
    end
})

-- Auto Reel Normal Toggle
MainTab:AddToggle({
    Name = "Auto Reel (Normal)",
    Flag = "NormalMode",
    Default = normalmode,
    Callback = function(state)
        normalmode = state
        if state and (autoreel or instantreel) then
            autoreel = false
            instantreel = false
            autoreel_running = false
            instantreel_running = false
        end
        if state then
            local success, err = pcall(StartAutoReelNormal)
            if not success then
                warn("Error in StartAutoReelNormal: " .. err)
                normalmode = false
            end
        else
            normalmode_running = false
        end
    end
})

-- Auto Cast Toggle
MainTab:AddToggle({
    Name = "Auto Cast",
    Flag = "AutoCast",
    Default = autocast,
    Callback = function(state)
        autocast = state
        if state then
            local success, err = pcall(StartAutoCast)
            if not success then
                warn("Error in StartAutoCast: " .. err)
                autocast = false
            end
        else
            autocast_running = false
        end
    end
})

-- Auto Cast Mode Dro
