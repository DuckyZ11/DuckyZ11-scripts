--[[
    WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]

-- Initialize services
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")
local player = Players.LocalPlayer

-- Load redzlib with error handling
local redzlib
local success, result = pcall(function()
    return loadstring(game:HttpGet("https://gist.githubusercontent.com/MjContiga1/54c07e52fc2aab8873b68d91a71d11c6/raw/fb4f1d6a7c89465f3b39bc00eeff09af24b88f20/Redz%2520hub.lua"))()
end)
if not success then
    warn("Failed to load redzlib: " .. result)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Error",
        Text = "Failed to load UI library: " .. result,
        Duration = 5
    })
    return
end
redzlib = result

-- Create window with error handling
local Window
success, result = pcall(function()
    return redzlib:MakeWindow({
        Title = "Fisch Auto Reel",
        SubTitle = "Legit, Normal & Instant Mode",
        SaveFolder = "FischSettings"
    })
end)
if not success then
    warn("Failed to create window: " .. result)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Error",
        Text = "Failed to create UI: " .. result,
        Duration = 5
    })
    return
end
Window = result

-- Check and set minimize button image
local newImageId = "rbxassetid://128748965171838"
local fallbackImageId = "rbxassetid://139438145143663"
local imageId = newImageId
success, result = pcall(function()
    game:GetService("ContentProvider"):PreloadAsync({newImageId})
end)
if not success then
    imageId = fallbackImageId
    Window:Dialog({
        Title = "Warning",
        Text = "Failed to load image rbxassetid://137819129207311. Using fallback image.",
        Options = {{"OK", function() end}}
    })
end

-- Add minimize button (square with rounded corners)
success, result = pcall(function()
    Window:AddMinimizeButton({
        Button = { 
            Image = imageId, 
            BackgroundTransparency = 0,
            Size = UDim2.new(0, 44, 0, 44)
        },
        Corner = { CornerRadius = UDim.new(0, 8) }
    })
end)
if not success then
    warn("Failed to add minimize button: " .. result)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Error",
        Text = "Failed to add minimize button: " .. result,
        Duration = 5
    })
end

-- Create single tab
local MainTab
success, result = pcall(function()
    return Window:MakeTab({"Main", "rbxassetid://7733960981"})
end)
if not success then
    warn("Failed to create tab: " .. result)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Error",
        Text = "Failed to create tab: " .. result,
        Duration = 5
    })
    return
end
MainTab = result

success, result = pcall(function()
    Window:SelectTab(MainTab)
end)
if not success then
    warn("Failed to select tab: " .. result)
end

-- Add section
local Section
success, result = pcall(function()
    return MainTab:AddSection({"Fisch Auto Reel"})
end)
if not success then
    warn("Failed to create section: " .. result)
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Error",
        Text = "Failed to create section: " .. result,
        Duration = 5
    })
    return
end
Section = result

-- Initialize settings
local SETTINGS_FILE = "Fischsv.json"
local Settings = {
    AutoReel = false,
    NormalMode = false,
    InstantReel = false,
    MissDuration = "1-3s",
    Smoothness = "Medium",
    PauseDuration = "1.5s"
}

-- Load settings from file
if pcall(function() return readfile(SETTINGS_FILE) end) then
    local success, data = pcall(function()
        return HttpService:JSONDecode(readfile(SETTINGS_FILE))
    end)
    if success and data then
        for k, v in pairs(data) do
            Settings[k] = v
        end
    end
end

-- Variables
local autoreel = Settings.AutoReel
local normalmode = Settings.NormalMode
local instantreel = Settings.InstantReel
local missDuration = Settings.MissDuration
local smoothness = Settings.Smoothness
local pauseDuration = Settings.PauseDuration
local autoreel_running = false
local normalmode_running = false
local instantreel_running = false

-- Save settings function
local function SaveSettings()
    pcall(function()
        local dataToSave = {}
        for k, v in pairs(Settings) do
            dataToSave[k] = v
        end
        writefile(SETTINGS_FILE, HttpService:JSONEncode(dataToSave))
        Window:Dialog({
            Title = "Settings",
            Text = "Settings saved successfully!",
            Options = {{"OK", function() end}}
        })
    end)
end

-- Get HumanoidRootPart
local function GetHumanoidRootPart()
    local char = player.Character or player.CharacterAdded:Wait()
    return char:WaitForChild("HumanoidRootPart")
end

-- Linear interpolation for ultra-smooth movement
local function lerp(a, b, t)
    return a + (b - a) * t
end

-- Get smoothness value for Normal mode
local function getSmoothnessValue()
    if smoothness == "Slow" then
        return 0.1
    elseif smoothness == "Fast" then
        return 0.2
    else -- Medium
        return 0.15
    end
end

-- Get pause duration for Normal mode
local function getPauseDurationValue()
    if pauseDuration == "1.5s" then
        return 1.5
    elseif pauseDuration == "2.3s" then
        return 2.3
    else -- 3s
        return 3
    end
end

-- Auto Reel (Legit mode, perfect tracking, fixed t=0.15)
local function StartAutoReel()
    if autoreel_running or normalmode_running or instantreel_running then return end
    autoreel_running = true
    task.defer(function()
        while autoreel do
            local gui = player:FindFirstChild("PlayerGui")
            local reel = gui and gui:FindFirstChild("reel")
            while autoreel and gui and not reel do
                reel = gui:FindFirstChild("reel")
                task.wait(0.1)
            end
            if reel then
                local char = player.Character
                if char then
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") and tool:FindFirstChild("events") and tool.events:FindFirstChild("reset") then
                            local resetEvent = tool.events.reset
                            while autoreel and reel and reel.Parent and tool.Parent == char do
                                local success, err = pcall(function()
                                    resetEvent:FireServer()
                                    local bar = reel:FindFirstChild("bar")
                                    local fish = bar and bar:FindFirstChild("fish")
                                    local playerbar = bar and bar:FindFirstChild("playerbar")
                                    if fish and playerbar then
                                        local currentX = playerbar.Position.X.Scale
                                        local currentY = playerbar.Position.Y.Scale
                                        while autoreel and reel and reel.Parent and fish and playerbar do
                                            local targetX = fish.Position.X.Scale + math.random(-0.005, 0.005)
                                            local targetY = fish.Position.Y.Scale + math.random(-0.005, 0.005)
                                            currentX = lerp(currentX, targetX, 0.15) -- Fixed t=0.15
                                            currentY = lerp(currentY, targetY, 0.15)
                                            playerbar.Position = UDim2.new(currentX, 0, currentY, 0)
                                            task.wait(0.01)
                                            bar = reel:FindFirstChild("bar")
                                            fish = bar and bar:FindFirstChild("fish")
                                            playerbar = bar and bar:FindFirstChild("playerbar")
                                        end
                                        if autoreel and not reel.Parent then
                                            local isPerfect = true
                                            ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished"):FireServer(80, isPerfect)
                                        end
                                    else
                                        Window:Dialog({
                                            Title = "Warning",
                                            Text = "Reel UI elements not found! Ensure you're fishing.",
                                            Options = {{"OK", function() end}}
                                        })
                                    end
                                end)
                                if not success then
                                    warn("Error in AutoReel: " .. err)
                                    Window:Dialog({
                                        Title = "Error",
                                        Text = "Auto Reel failed: " .. err,
                                        Options = {{"OK", function() end}}
                                    })
                                    autoreel = false
                                    Settings.AutoReel = false
                                    SaveSettings()
                                    return
                                end
                                task.wait(0.1)
                            end
                        end
                    end
                end
            else
                Window:Dialog({
                    Title = "Warning",
                    Text = "Reel UI not found! Start fishing first.",
                    Options = {{"OK", function() end}}
                })
            end
            task.wait(0.1)
        end
        autoreel_running = false
    end)
end

-- Auto Reel Normal (mimics human with pauses)
local function StartAutoReelNormal()
    if normalmode_running or autoreel_running or instantreel_running then return end
    normalmode_running = true
    task.defer(function()
        while normalmode do
            local gui = player:FindFirstChild("PlayerGui")
            local reel = gui and gui:FindFirstChild("reel")
            while normalmode and gui and not reel do
                reel = gui:FindFirstChild("reel")
                task.wait(0.1)
            end
            if reel then
                local char = player.Character
                if char then
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") and tool:FindFirstChild("events") and tool.events:FindFirstChild("reset") then
                            local resetEvent = tool.events.reset
                            while normalmode and reel and reel.Parent and tool.Parent == char do
                                local success, err = pcall(function()
                                    resetEvent:FireServer()
                                    local bar = reel:FindFirstChild("bar")
                                    local fish = bar and bar:FindFirstChild("fish")
                                    local playerbar = bar and bar:FindFirstChild("playerbar")
                                    if fish and playerbar then
                                        local currentX = playerbar.Position.X.Scale
                                        local currentY = playerbar.Position.Y.Scale
                                        local tracking = true
                                        local pauseTime = 0
                                        local missDurationSec = missDuration == "1-3s" and math.random(1, 3) or
                                                               missDuration == "1-6s" and math.random(1, 6) or
                                                               math.random(1, 8)
                                        local missStart = tick()
                                        local lerpT = getSmoothnessValue()
                                        local pauseDurationSec = getPauseDurationValue()
                                        while normalmode and reel and reel.Parent and fish and playerbar do
                                            if tracking then
                                                local targetX = fish.Position.X.Scale + math.random(-0.01, 0.01)
                                                local targetY = fish.Position.Y.Scale + math.random(-0.01, 0.01)
                                                currentX = lerp(currentX, targetX, lerpT)
                                                currentY = lerp(currentY, targetY, lerpT)
                                                playerbar.Position = UDim2.new(currentX, 0, currentY, 0)
                                            end
                                            if tick() - missStart >= missDurationSec then
                                                tracking = not tracking
                                                pauseTime = tick()
                                                missDurationSec = missDuration == "1-3s" and math.random(1, 3) or
                                                                 missDuration == "1-6s" and math.random(1, 6) or
                                                                 math.random(1, 8)
                                            end
                                            if not tracking and tick() - pauseTime >= pauseDurationSec then
                                                tracking = true
                                                missStart = tick()
                                            end
                                            task.wait(0.01)
                                            bar = reel:FindFirstChild("bar")
                                            fish = bar and bar:FindFirstChild("fish")
                                            playerbar = bar and bar:FindFirstChild("playerbar")
                                        end
                                        if normalmode and not reel.Parent then
                                            local isPerfect = math.random(0, 1) == 1
                                            ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished"):FireServer(70, isPerfect)
                                        end
                                    else
                                        Window:Dialog({
                                            Title = "Warning",
                                            Text = "Reel UI elements not found! Ensure you're fishing.",
                                            Options = {{"OK", function() end}}
                                        })
                                    end
                                end)
                                if not success then
                                    warn("Error in AutoReelNormal: " .. err)
                                    Window:Dialog({
                                        Title = "Error",
                                        Text = "Auto Reel Normal failed: " .. err,
                                        Options = {{"OK", function() end}}
                                    })
                                    normalmode = false
                                    Settings.NormalMode = false
                                    SaveSettings()
                                    return
                                end
                                task.wait(0.1)
                            end
                        end
                    end
                end
            else
                Window:Dialog({
                    Title = "Warning",
                    Text = "Reel UI not found! Start fishing first.",
                    Options = {{"OK", function() end}}
                })
            end
            task.wait(0.1)
        end
        normalmode_running = false
    end)
end

-- Instant Reel (Risk mode, instant completion)
local function StartInstantReel()
    if instantreel_running or autoreel_running or normalmode_running then return end
    instantreel_running = true
    task.defer(function()
        while instantreel do
            local gui = player:FindFirstChild("PlayerGui")
            local reel = gui and gui:FindFirstChild("reel")
            while instantreel and gui and not reel do
                reel = gui:FindFirstChild("reel")
                task.wait(0.1)
            end
            if reel then
                local char = player.Character
                if char then
                    for _, tool in ipairs(char:GetChildren()) do
                        if tool:IsA("Tool") and tool:FindFirstChild("events") and tool.events:FindFirstChild("reset") then
                            local resetEvent = tool.events.reset
                            while instantreel and reel and reel.Parent and tool.Parent == char do
                                local success, err = pcall(function()
                                    resetEvent:FireServer()
                                    local args = { [1] = 100, [2] = true }
                                    ReplicatedStorage:WaitForChild("events"):WaitForChild("reelfinished"):FireServer(unpack(args))
                                end)
                                if not success then
                                    warn("Error in InstantReel: " .. err)
                                    Window:Dialog({
                                        Title = "Error",
                                        Text = "Instant Reel failed: " .. err,
                                        Options = {{"OK", function() end}}
                                    })
                                    instantreel = false
                                    Settings.InstantReel = false
                                    SaveSettings()
                                    return
                                end
                                task.wait(0.1)
                            end
                        end
                    end
                end
            else
                Window:Dialog({
                    Title = "Warning",
                    Text = "Reel UI not found! Start fishing first.",
                    Options = {{"OK", function() end}}
                })
            end
            task.wait(0.1)
        end
        instantreel_running = false
    end)
end

-- Auto Reel Toggle (Legit mode)
success, result = pcall(function()
    MainTab:AddToggle({
        Name = "Auto Reel (Legit)",
        Flag = "AutoReel",
        Default = autoreel,
        Callback = function(state)
            autoreel = state
            Settings.AutoReel = state
            if state then
                if normalmode then
                    normalmode = false
                    Settings.NormalMode = false
                    normalmode_running = false
                end
                if instantreel then
                    instantreel = false
                    Settings.InstantReel = false
                    instantreel_running = false
                end
            end
            SaveSettings()
            if state then
                local success, err = pcall(StartAutoReel)
                if not success then
                    warn("Error in StartAutoReel: " .. err)
                    Window:Dialog({
                        Title = "Error",
                        Text = "Failed to start Auto Reel: " .. err,
                        Options = {{"OK", function() end}}
                    })
                    autoreel = false
                    Settings.AutoReel = false
                    SaveSett
